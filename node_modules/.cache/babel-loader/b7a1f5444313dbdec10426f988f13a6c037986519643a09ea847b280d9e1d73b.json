{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\movies-client\\\\my-react-app\\\\src\\\\components\\\\Header.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getAllGenres } from '../api/movieApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const location = useLocation(); // Get the current route\n  const [genres, setGenres] = useState([]); // List of genres from the API\n  const [selectedGenres, setSelectedGenres] = useState([]); // Selected genres\n  const [showDropdown, setShowDropdown] = useState(false); // Toggle dropdown visibility\n\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const data = await getAllGenres();\n        setGenres(data);\n      } catch (error) {\n        console.error('Error fetching genres:', error);\n      }\n    };\n    fetchGenres();\n  }, []);\n  const handleGenreSelect = genre => {\n    if (!selectedGenres.includes(genre)) {\n      setSelectedGenres(prev => [...prev, genre]); // Add selected genre\n    }\n    setShowDropdown(false); // Close dropdown after selection\n  };\n  const handleRemoveGenre = genre => {\n    setSelectedGenres(prev => prev.filter(g => g !== genre)); // Remove genre\n  };\n\n  // Only render the header on the MoviesList page (\"/\" route)\n  if (location.pathname !== '/') {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-container p-3 bg-light\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genre-input-container position-relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Select genres\",\n        onClick: () => setShowDropdown(prev => !prev) // Toggle dropdown on click\n        ,\n        readOnly: true,\n        value: selectedGenres.join(', ') // Display selected genres\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dropdown-menu show w-100\",\n        children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleGenreSelect(genre),\n          className: \"dropdown-item\",\n          children: genre\n        }, genre, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-genres mt-2\",\n      children: selectedGenres.map(genre => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge bg-primary me-2\",\n        children: [genre, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-close btn-close-white ms-1\",\n          \"aria-label\": \"Remove\",\n          onClick: () => handleRemoveGenre(genre)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, genre, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"JyygMK6AaZjugOotL2xKmoTo6Go=\", false, function () {\n  return [useLocation];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","getAllGenres","jsxDEV","_jsxDEV","Header","_s","location","genres","setGenres","selectedGenres","setSelectedGenres","showDropdown","setShowDropdown","fetchGenres","data","error","console","handleGenreSelect","genre","includes","prev","handleRemoveGenre","filter","g","pathname","className","children","type","placeholder","onClick","readOnly","value","join","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["D:/Work/movies-client/my-react-app/src/components/Header.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getAllGenres } from '../api/movieApi';\r\n\r\nconst Header: React.FC = () => {\r\n  const location = useLocation(); // Get the current route\r\n  const [genres, setGenres] = useState<string[]>([]); // List of genres from the API\r\n  const [selectedGenres, setSelectedGenres] = useState<string[]>([]); // Selected genres\r\n  const [showDropdown, setShowDropdown] = useState(false); // Toggle dropdown visibility\r\n\r\n  useEffect(() => {\r\n    const fetchGenres = async () => {\r\n      try {\r\n        const data = await getAllGenres();\r\n        setGenres(data);\r\n      } catch (error) {\r\n        console.error('Error fetching genres:', error);\r\n      }\r\n    };\r\n\r\n    fetchGenres();\r\n  }, []);\r\n\r\n  const handleGenreSelect = (genre: string) => {\r\n    if (!selectedGenres.includes(genre)) {\r\n      setSelectedGenres((prev) => [...prev, genre]); // Add selected genre\r\n    }\r\n    setShowDropdown(false); // Close dropdown after selection\r\n  };\r\n\r\n  const handleRemoveGenre = (genre: string) => {\r\n    setSelectedGenres((prev) => prev.filter((g) => g !== genre)); // Remove genre\r\n  };\r\n\r\n  // Only render the header on the MoviesList page (\"/\" route)\r\n  if (location.pathname !== '/') {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"header-container p-3 bg-light\">\r\n      <div className=\"genre-input-container position-relative\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Select genres\"\r\n          onClick={() => setShowDropdown((prev) => !prev)} // Toggle dropdown on click\r\n          readOnly\r\n          value={selectedGenres.join(', ')} // Display selected genres\r\n        />\r\n        {showDropdown && (\r\n          <ul className=\"dropdown-menu show w-100\">\r\n            {genres.map((genre) => (\r\n              <li key={genre} onClick={() => handleGenreSelect(genre)} className=\"dropdown-item\">\r\n                {genre}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      <div className=\"selected-genres mt-2\">\r\n        {selectedGenres.map((genre) => (\r\n          <span key={genre} className=\"badge bg-primary me-2\">\r\n            {genre}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close btn-close-white ms-1\"\r\n              aria-label=\"Remove\"\r\n              onClick={() => handleRemoveGenre(genre)}\r\n            ></button>\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}