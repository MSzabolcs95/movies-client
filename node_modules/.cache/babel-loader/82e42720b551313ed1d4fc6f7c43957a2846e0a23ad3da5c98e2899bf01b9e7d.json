{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\movies-client\\\\my-react-app\\\\src\\\\components\\\\MoviesList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getNowPlayingMovies } from '../api/movieApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NowPlayingMovies = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true); // Set loading to true before fetching\n        const data = await getNowPlayingMovies(currentPage); // Pass currentPage to the API\n        console.log('Fetched movies:', data); // Log the fetched data\n        setMovies(data || []); // Ensure movies is an array\n        setTotalPages(data.totalPages || 1); // Ensure totalPages is valid\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      } finally {\n        setLoading(false); // Set loading to false after fetching\n      }\n    };\n    fetchMovies();\n    console.log('Fetching movies for page:', movies); // Log the current page\n  }, [currentPage]);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Now Playing Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) // Show loading message\n    : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: movie.fullPosterPath,\n              className: \"card-img-top\",\n              alt: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: movie.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"pagination justify-content-center\",\n          children: Array.from({\n            length: totalPages\n          }, (_, i) => i + 1).map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `page-item ${number === currentPage ? 'active' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"page-link\",\n              onClick: () => paginate(number),\n              children: number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)\n          }, number, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(NowPlayingMovies, \"XZK2IgcHYDl19JrgXefDXzuilX0=\");\n_c = NowPlayingMovies;\nexport default NowPlayingMovies;\nvar _c;\n$RefreshReg$(_c, \"NowPlayingMovies\");","map":{"version":3,"names":["React","useEffect","useState","getNowPlayingMovies","jsxDEV","_jsxDEV","Fragment","_Fragment","NowPlayingMovies","_s","movies","setMovies","currentPage","setCurrentPage","totalPages","setTotalPages","loading","setLoading","fetchMovies","data","console","log","error","paginate","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","src","fullPosterPath","alt","title","overview","id","Array","from","length","_","i","number","onClick","_c","$RefreshReg$"],"sources":["D:/Work/movies-client/my-react-app/src/components/MoviesList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getNowPlayingMovies } from '../api/movieApi';\r\n\r\nconst NowPlayingMovies = () => {\r\n  interface Movie {\r\n    id: number;\r\n    title: string;\r\n    overview: string;\r\n    fullPosterPath: string;\r\n  }\r\n\r\n  const [movies, setMovies] = useState<Movie[]>([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [loading, setLoading] = useState(true); // Add loading state\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        setLoading(true); // Set loading to true before fetching\r\n        const data = await getNowPlayingMovies(currentPage); // Pass currentPage to the API\r\n        console.log('Fetched movies:', data); // Log the fetched data\r\n        setMovies(data || []); // Ensure movies is an array\r\n        setTotalPages(data.totalPages || 1); // Ensure totalPages is valid\r\n      } catch (error) {\r\n        console.error('Error fetching movies:', error);\r\n      } finally {\r\n        setLoading(false); // Set loading to false after fetching\r\n      }\r\n    };\r\n    fetchMovies();\r\n    console.log('Fetching movies for page:', movies); // Log the current page\r\n  }, [currentPage]);\r\n\r\n  // Change page\r\n  const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2 className=\"text-center mb-4\">Now Playing Movies</h2>\r\n\r\n      {loading ? (\r\n        <p className=\"text-center\">Loading...</p> // Show loading message\r\n      ) : (\r\n        <>\r\n          <div className=\"row\">\r\n            {movies.map((movie) => (\r\n              <div className=\"col-md-4 mb-4\" key={movie.id}>\r\n                <div className=\"card\">\r\n                  <img\r\n                    src={movie.fullPosterPath}\r\n                    className=\"card-img-top\"\r\n                    alt={movie.title}\r\n                  />\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{movie.title}</h5>\r\n                    <p className=\"card-text\">{movie.overview}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Pagination */}\r\n          <nav>\r\n            <ul className=\"pagination justify-content-center\">\r\n              {Array.from({ length: totalPages }, (_, i) => i + 1).map((number) => (\r\n                <li\r\n                  key={number}\r\n                  className={`page-item ${number === currentPage ? 'active' : ''}`}\r\n                >\r\n                  <button\r\n                    className=\"page-link\"\r\n                    onClick={() => paginate(number)}\r\n                  >\r\n                    {number}\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </nav>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NowPlayingMovies;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,mBAAmB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAQ7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAU,EAAE,CAAC;EACjD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACFD,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;QAClB,MAAME,IAAI,GAAG,MAAMhB,mBAAmB,CAACS,WAAW,CAAC,CAAC,CAAC;QACrDQ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,IAAI,CAAC,CAAC,CAAC;QACtCR,SAAS,CAACQ,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;QACvBJ,aAAa,CAACI,IAAI,CAACL,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC;MACvC,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,SAAS;QACRL,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;IACDC,WAAW,CAAC,CAAC;IACbE,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEX,MAAM,CAAC,CAAC,CAAC;EACpD,CAAC,EAAE,CAACE,WAAW,CAAC,CAAC;;EAEjB;EACA,MAAMW,QAAQ,GAAIC,UAAkB,IAAKX,cAAc,CAACW,UAAU,CAAC;EAEnE,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BrB,OAAA;MAAIoB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEvDd,OAAO,gBACNX,OAAA;MAAGoB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;IAAA,eAE1CzB,OAAA,CAAAE,SAAA;MAAAmB,QAAA,gBACErB,OAAA;QAAKoB,SAAS,EAAC,KAAK;QAAAC,QAAA,EACjBhB,MAAM,CAACqB,GAAG,CAAEC,KAAK,iBAChB3B,OAAA;UAAKoB,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC5BrB,OAAA;YAAKoB,SAAS,EAAC,MAAM;YAAAC,QAAA,gBACnBrB,OAAA;cACE4B,GAAG,EAAED,KAAK,CAACE,cAAe;cAC1BT,SAAS,EAAC,cAAc;cACxBU,GAAG,EAAEH,KAAK,CAACI;YAAM;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,eACFzB,OAAA;cAAKoB,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBrB,OAAA;gBAAIoB,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAEM,KAAK,CAACI;cAAK;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC7CzB,OAAA;gBAAGoB,SAAS,EAAC,WAAW;gBAAAC,QAAA,EAAEM,KAAK,CAACK;cAAQ;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GAX4BE,KAAK,CAACM,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYvC,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNzB,OAAA;QAAAqB,QAAA,eACErB,OAAA;UAAIoB,SAAS,EAAC,mCAAmC;UAAAC,QAAA,EAC9Ca,KAAK,CAACC,IAAI,CAAC;YAAEC,MAAM,EAAE3B;UAAW,CAAC,EAAE,CAAC4B,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAACZ,GAAG,CAAEa,MAAM,iBAC9DvC,OAAA;YAEEoB,SAAS,EAAE,aAAamB,MAAM,KAAKhC,WAAW,GAAG,QAAQ,GAAG,EAAE,EAAG;YAAAc,QAAA,eAEjErB,OAAA;cACEoB,SAAS,EAAC,WAAW;cACrBoB,OAAO,EAAEA,CAAA,KAAMtB,QAAQ,CAACqB,MAAM,CAAE;cAAAlB,QAAA,EAE/BkB;YAAM;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD;UAAC,GARJc,MAAM;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAST,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA,eACN,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAlFID,gBAAgB;AAAAsC,EAAA,GAAhBtC,gBAAgB;AAoFtB,eAAeA,gBAAgB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}