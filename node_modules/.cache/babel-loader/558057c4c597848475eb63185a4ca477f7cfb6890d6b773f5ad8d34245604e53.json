{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\movies-client\\\\my-react-app\\\\src\\\\components\\\\MoviesList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getNowPlayingMovies } from '../api/movieApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NowPlayingMovies = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const data = await getNowPlayingMovies(currentPage); // Pass currentPage to the API\n      setMovies(data.movies); // Assuming the API returns { movies: [], totalPages: number }\n      setTotalPages(data.totalPages);\n    };\n    fetchMovies();\n  }, [currentPage]);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Now Playing Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.fullPosterPath,\n            className: \"card-img-top\",\n            alt: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: movie.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination justify-content-center\",\n        children: Array.from({\n          length: totalPages\n        }, (_, i) => i + 1).map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${number === currentPage ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-link\",\n            onClick: () => paginate(number),\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(NowPlayingMovies, \"5KtHYLANBaZuUJ72LpeC5jJl2EA=\");\n_c = NowPlayingMovies;\nexport default NowPlayingMovies;\nvar _c;\n$RefreshReg$(_c, \"NowPlayingMovies\");","map":{"version":3,"names":["React","useEffect","useState","getNowPlayingMovies","jsxDEV","_jsxDEV","NowPlayingMovies","_s","movies","setMovies","currentPage","setCurrentPage","totalPages","setTotalPages","fetchMovies","data","paginate","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","src","fullPosterPath","alt","title","overview","id","Array","from","length","_","i","number","onClick","_c","$RefreshReg$"],"sources":["D:/Work/movies-client/my-react-app/src/components/MoviesList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getNowPlayingMovies } from '../api/movieApi';\r\n\r\nconst NowPlayingMovies = () => {\r\n  interface Movie {\r\n    id: number;\r\n    title: string;\r\n    overview: string;\r\n    fullPosterPath: string;\r\n  }\r\n\r\n  const [movies, setMovies] = useState<Movie[]>([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      const data = await getNowPlayingMovies(currentPage); // Pass currentPage to the API\r\n      setMovies(data.movies); // Assuming the API returns { movies: [], totalPages: number }\r\n      setTotalPages(data.totalPages);\r\n    };\r\n    fetchMovies();\r\n  }, [currentPage]);\r\n\r\n  // Change page\r\n  const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2 className=\"text-center mb-4\">Now Playing Movies</h2>\r\n      <div className=\"row\">\r\n        {movies.map((movie) => (\r\n          <div className=\"col-md-4 mb-4\" key={movie.id}>\r\n            <div className=\"card\">\r\n              <img\r\n                src={movie.fullPosterPath}\r\n                className=\"card-img-top\"\r\n                alt={movie.title}\r\n              />\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{movie.title}</h5>\r\n                <p className=\"card-text\">{movie.overview}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Pagination */}\r\n      <nav>\r\n        <ul className=\"pagination justify-content-center\">\r\n          {Array.from({ length: totalPages }, (_, i) => i + 1).map((number) => (\r\n            <li\r\n              key={number}\r\n              className={`page-item ${number === currentPage ? 'active' : ''}`}\r\n            >\r\n              <button\r\n                className=\"page-link\"\r\n                onClick={() => paginate(number)}\r\n              >\r\n                {number}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NowPlayingMovies;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}