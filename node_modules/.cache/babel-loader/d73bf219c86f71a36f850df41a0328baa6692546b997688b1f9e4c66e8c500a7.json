{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\movies-client\\\\my-react-app\\\\src\\\\components\\\\AddComment.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { addComment } from '../api/commentApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddComment = ({\n  movieId,\n  onCommentAdded\n}) => {\n  _s();\n  const [content, setContent] = useState('');\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    setSuccess(false);\n    const newComment = {\n      content,\n      movieId\n    };\n    try {\n      await addComment(newComment);\n      setSuccess(true);\n      setContent('');\n      onCommentAdded();\n    } catch (err) {\n      setError('Failed to add comment. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: content,\n      onChange: e => setContent(e.target.value),\n      placeholder: \"Add a comment\",\n      className: \"form-control mb-2\",\n      rows: 3,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger mt-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-success mt-2\",\n      children: \"Comment added successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AddComment, \"PfwXLU+Nt0846X2rR1UHPnWSMd0=\");\n_c = AddComment;\nexport default AddComment;\nvar _c;\n$RefreshReg$(_c, \"AddComment\");","map":{"version":3,"names":["React","useState","addComment","jsxDEV","_jsxDEV","AddComment","movieId","onCommentAdded","_s","content","setContent","error","setError","success","setSuccess","handleSubmit","e","preventDefault","newComment","err","onSubmit","children","value","onChange","target","placeholder","className","rows","required","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["D:/Work/movies-client/my-react-app/src/components/AddComment.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { addComment } from '../api/commentApi';\r\n\r\ninterface AddCommentProps {\r\n  movieId: string;\r\n  onCommentAdded: () => void;\r\n}\r\n\r\nconst AddComment: React.FC<AddCommentProps> = ({ movieId, onCommentAdded }) => {\r\n  const [content, setContent] = useState('');\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<boolean>(false);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setSuccess(false);\r\n\r\n    const newComment = {\r\n      content,\r\n      movieId,\r\n    };\r\n\r\n    try {\r\n      await addComment(newComment); \r\n      setSuccess(true);\r\n      setContent('');\r\n      onCommentAdded(); \r\n    } catch (err) {\r\n      setError('Failed to add comment. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <textarea\r\n        value={content}\r\n        onChange={(e) => setContent(e.target.value)}\r\n        placeholder=\"Add a comment\"\r\n        className=\"form-control mb-2\"\r\n        rows={3}\r\n        required\r\n      />\r\n      <button type=\"submit\" className=\"btn btn-primary\">\r\n        Submit\r\n      </button>\r\n      {error && <p className=\"text-danger mt-2\">{error}</p>}\r\n      {success && <p className=\"text-success mt-2\">Comment added successfully!</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddComment;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO/C,MAAMC,UAAqC,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC7E,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAU,KAAK,CAAC;EAEtD,MAAMc,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBL,QAAQ,CAAC,IAAI,CAAC;IACdE,UAAU,CAAC,KAAK,CAAC;IAEjB,MAAMI,UAAU,GAAG;MACjBT,OAAO;MACPH;IACF,CAAC;IAED,IAAI;MACF,MAAMJ,UAAU,CAACgB,UAAU,CAAC;MAC5BJ,UAAU,CAAC,IAAI,CAAC;MAChBJ,UAAU,CAAC,EAAE,CAAC;MACdH,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZP,QAAQ,CAAC,0CAA0C,CAAC;IACtD;EACF,CAAC;EAED,oBACER,OAAA;IAAMgB,QAAQ,EAAEL,YAAa;IAAAM,QAAA,gBAC3BjB,OAAA;MACEkB,KAAK,EAAEb,OAAQ;MACfc,QAAQ,EAAGP,CAAC,IAAKN,UAAU,CAACM,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MAC5CG,WAAW,EAAC,eAAe;MAC3BC,SAAS,EAAC,mBAAmB;MAC7BC,IAAI,EAAE,CAAE;MACRC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF5B,OAAA;MAAQ6B,IAAI,EAAC,QAAQ;MAACP,SAAS,EAAC,iBAAiB;MAAAL,QAAA,EAAC;IAElD;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRrB,KAAK,iBAAIP,OAAA;MAAGsB,SAAS,EAAC,kBAAkB;MAAAL,QAAA,EAAEV;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpDnB,OAAO,iBAAIT,OAAA;MAAGsB,SAAS,EAAC,mBAAmB;MAAAL,QAAA,EAAC;IAA2B;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEX,CAAC;AAACxB,EAAA,CA1CIH,UAAqC;AAAA6B,EAAA,GAArC7B,UAAqC;AA4C3C,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}