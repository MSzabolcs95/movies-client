{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\movies-client\\\\my-react-app\\\\src\\\\components\\\\MoviesList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getNowPlayingMovies } from '../api/movieApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviesList = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch the latest movies by default\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const data = await getNowPlayingMovies();\n        setMovies(data);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n  const handleSearchResults = results => {\n    setMovies(results); // Update the movie list with search results\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movie/${movie.id}`,\n          style: {\n            textDecoration: 'none',\n            color: 'inherit'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n              className: \"card-img-top\",\n              alt: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: movie.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), !loading && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center mt-4\",\n      children: \"No movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(MoviesList, \"YzKY10iNi63iPDPJgWRCoBeeTxQ=\");\n_c = MoviesList;\nexport default MoviesList;\nvar _c;\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"names":["React","useEffect","useState","Link","getNowPlayingMovies","jsxDEV","_jsxDEV","MoviesList","_s","movies","setMovies","loading","setLoading","fetchMovies","data","error","console","handleSearchResults","results","children","className","map","movie","to","id","style","textDecoration","color","src","poster_path","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","overview","length","_c","$RefreshReg$"],"sources":["D:/Work/movies-client/my-react-app/src/components/MoviesList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getNowPlayingMovies } from '../api/movieApi';\r\nimport Header from './Header';\r\n\r\nconst MoviesList: React.FC = () => {\r\n  interface Movie {\r\n    id: number;\r\n    title: string;\r\n    overview: string;\r\n    poster_path: string;\r\n  }\r\n\r\n  const [movies, setMovies] = useState<Movie[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch the latest movies by default\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const data = await getNowPlayingMovies();\r\n        setMovies(data);\r\n      } catch (error) {\r\n        console.error('Error fetching movies:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  const handleSearchResults = (results: Movie[]) => {\r\n    setMovies(results); // Update the movie list with search results\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Include Header and pass handleSearchResults */}\r\n      \r\n        <div className=\"row\">\r\n          {movies.map((movie) => (\r\n            <div className=\"col-md-3 mb-4\" key={movie.id}>\r\n              <Link to={`/movie/${movie.id}`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n                <div className=\"card\">\r\n                  <img\r\n                    src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                    className=\"card-img-top\"\r\n                    alt={movie.title}\r\n                  />\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{movie.title}</h5>\r\n                    <p className=\"card-text\">{movie.overview}</p>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {!loading && movies.length === 0 && (\r\n          <p className=\"text-center mt-4\">No movies found.</p>\r\n        )}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default MoviesList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}